const mongoose = require('mongoose');


/// TrainSchSchema contains the name of the subway train (eg., N, Q, R, L, 1, 2, 3,...)
///     and link to that train's timetable
const TrainSchSchema = new mongoose.Schema({
    trainName: {
        type: String,
        required: true,
    },
    link: {
        type: String,
        required: true,
    }
});


/* User Schema
secret token will be generated by module randomstring at the time of registration,
    it will then be sent to the user's entered email address using nodemailer,
    when this secret token is found among user's secret token stored in the database, the user will be verified 
        by setting confirmedUser to true
    secret token will be set to an empty string with successful registration
        to prevent possible redundant secret token among users

myRides is a list consisted of objects of three properties - date, time and location

myTrainSch is a list consisted of TrainSchSchema that has trainName and its link
*/
const UserSchema = new mongoose.Schema({
    firstName: {
        type: String,
        required:true
    },
    lastName: {
        type: String,
        required:true
    },
    nickname: {
        type: String,
        required:true
    },
    email: {
        type: String,
        required:true, 
        unique: true
    },
    password: {
        type: String,
        required:true
    }, 
    secretToken: {
        type: String,
    },
    confirmedUser: {
        type: Boolean,
    },
    myRides: [{
        date: {
            type: String,
            required: true
        },
        time: {
            type: String,
            required: true
        },       
        location: {
            type: String,
            required: true
        }
    }],
    myTrainSch: [TrainSchSchema],

})


const User = mongoose.model('User', UserSchema);

module.exports = User;